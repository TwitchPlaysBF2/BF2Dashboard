@page "/alerts"
@using BF2TV.Frontend.Pages.Alerts
@using BF2TV.Frontend.Store
@using BF2TV.Domain.Services
@inherits FluxorComponent
@inject IState<AlertStore.State> State
@inject IDispatcher Dispatcher
@inject IPeriodicRefresher PeriodicRefresher

<h3>Your Alerts</h3>

<div class="mb-5 mt-5">
    <h5>Recent Alerts</h5>
    <AlertHistory/>
</div>
<div>
    <h5>Alert Settings</h5>
    <ul>
        @foreach (var condition in State.Value.FriendIsOnServerConditions)
        {
            <li>
                <span>
                    Notify me, when <strong>friend</strong> joins <strong>any server</strong>:
                    <span class="text-white">@condition.FriendIdentity</span>
                </span>
                <span>[Remove]</span>
            </li>
        }
    </ul>
</div>

@code {

    private bool _isInitialized = false;

    protected override async Task OnInitializedAsync()
    {
        if (!_isInitialized)
        {
            Dispatcher.Dispatch(new InitializeServerListsAction());
            Dispatcher.Dispatch(new AlertStore.Actions.FriendIsOnServerConditions.StartLoading());
            PeriodicRefresher.UpdateSetting(true);
            _isInitialized = true;
        }
        await base.OnInitializedAsync();
    }

}